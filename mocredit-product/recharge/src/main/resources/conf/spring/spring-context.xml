<?xml version="1.0" encoding="UTF-8"?>  
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:tx="http://www.springframework.org/schema/tx"  
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:aop="http://www.springframework.org/schema/aop"  
    xsi:schemaLocation="  
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd  
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">  
  
	<!--配置文件集成-->
	<bean id="propertyConfigurer" class="com.mocredit.base.util.FilePropertyPlaceholderConfigurer">
	  	<property name="locations">
		  	<list>
	    		<value>classpath:jdbc.properties</value>
	    		<value>classpath:config.properties</value>
		  	</list>
	  	</property>
	</bean>
	<!--数据源配置-->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}"/>
        <property
                name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
        <property name="validationQuery" value="SELECT 1" />
    	<property name="testOnBorrow" value="true"/>
	</bean>
 
	<!-- transaction manager, use JtaTransactionManager for global tx-->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- define the SqlSessionFactory-->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="typeAliasesPackage" value="com.mocredit.bank.entity" />
	</bean>
	<!-- scan for mappers and let them be autowired -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mocredit.recharge.persitence" />
	</bean>
	<!--事物处理方式 使用@Transactional 标注在 方法上 -->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!--验证码生成器 Begain-->
	<bean id="imageCaptchaService" class="com.mocredit.recharge.checkcode.CaptchaService">
		<constructor-arg type="com.octo.captcha.service.captchastore.CaptchaStore" index="0">
			<ref bean="fastHashMapCaptchaStore"/>
		</constructor-arg>   
		<!--which captcha Engine you use-->   
		<constructor-arg type="com.octo.captcha.engine.CaptchaEngine" index="1">
			<ref bean="captchaEngineEx"/>
		</constructor-arg>   
		<constructor-arg index="2">   
			<value>180</value>   
		</constructor-arg>   
		<constructor-arg index="3">   
			<value>100000</value>   
		</constructor-arg>   
		<constructor-arg index="4">   
			<value>75000</value>   
		</constructor-arg>  
	</bean>
	<bean id="fastHashMapCaptchaStore" class="com.octo.captcha.service.captchastore.FastHashMapCaptchaStore"/>
	<!--you can define more than one captcha engine here -->   
	<bean id="captchaEngineEx" class="com.mocredit.recharge.checkcode.CaptchaEngineEx"/>
	<!--验证码生成器 End-->
	
	<bean id="taskExecutor"
		class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
		<property name="corePoolSize" value="10" /> <!-- 并发线程数,想达到真正的并发效果,最好对应CPU的线程数及核心数 -->
		<property name="maxPoolSize" value="30" /> <!-- 最大线程池容量 -->
		<property name="queueCapacity" value="500" /> <!-- 超过最大线程池容量后,允许的线程队列数 -->
	</bean>
</beans>
	
